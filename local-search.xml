<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hexo安装教程</title>
    <link href="/2020/07/26/install-hexo/"/>
    <url>/2020/07/26/install-hexo/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo安装教程"><a href="#Hexo安装教程" class="headerlink" title="Hexo安装教程"></a>Hexo安装教程</h1><h3 id="hexo简介"><a href="#hexo简介" class="headerlink" title="hexo简介"></a>hexo简介</h3><p>Hexo是一款基于Node.js的静态博客框架，依赖少易于安装使用，可以方便的生成静态网页托管在GitHub和Coding上，是搭建博客的首选框架。大家可以进入<a href="https://hexo.io/zh-cn/" target="_blank" rel="noopener">hexo官网</a>进行详细查看，因为Hexo的创建者是台湾人，对中文的支持很友好，可以选择中文进行查看。</p><h2 id="环境搭建"><a href="#环境搭建" class="headerlink" title="环境搭建"></a>环境搭建</h2><h3 id="安装Git"><a href="#安装Git" class="headerlink" title="安装Git"></a>安装Git</h3><p><strong>Windows</strong>：到git官网上下载<a href="https://gitforwindows.org/" target="_blank" rel="noopener">Download git</a>下载后会有一个Git Bash的命令行工具，以后就用这个工具来使用git。</p><p><strong>Linux</strong>：对linux来说实在是太简单了，因为最早的git就是在linux上编写的，只需要一行代码</p><pre><code class="hljs shell">sudo apt-get install gitsudo yum install git</code></pre><p>安装好后，用<code>git --version</code> 来查看一下版本</p><h3 id="安装nodejs"><a href="#安装nodejs" class="headerlink" title="安装nodejs"></a>安装nodejs</h3><p>Hexo是基于nodeJS编写的，所以需要安装一下nodeJs和里面的npm工具。</p><p><strong>Windows</strong>：<a href="https://nodejs.org/en/download/" target="_blank" rel="noopener">nodejs</a>选择LTS版本就行了</p><p><strong>Linux</strong>：</p><pre><code class="hljs shell">sudo apt-get install nodejssudo apt-get install npm</code></pre><p>安装完后，打开命令行</p><pre><code class="hljs shell">node -vnpm -v</code></pre><p>检查一下有没有安装成功</p><p>顺便说一下，windows在git安装完后，就可以直接使用git bash来敲命令行了，不用自带的cmd，cmd有点难用。</p><h3 id="安装hexo"><a href="#安装hexo" class="headerlink" title="安装hexo"></a>安装hexo</h3><p>前面git和nodejs安装好后，就可以安装hexo了，你可以先创建一个文件夹blog，然后<code>cd</code>到这个文件夹下（或者在这个文件夹下直接右键git bash打开）</p><pre><code class="hljs shell">npm install -g hexo-cli</code></pre><p>依旧用<code>hexo -v</code>查看一下版本</p><p>至此就全部安装完了。</p><p>接下来初始化一下hexo</p><pre><code class="hljs shell">hexo init myblog</code></pre><p>这个myblog可以自己取什么名字都行，然后</p><pre><code class="hljs shell">cd myblog //进入这个myblog文件夹npm install</code></pre><p>新建完成后，指定文件夹目录下有:</p><pre><code class="hljs bash">.├── _config.yml<span class="hljs-comment">#网站的 配置 信息，您可以在此配置大部分的参数。</span>├── package.json<span class="hljs-comment">#应用程序的信息。EJS, Stylus 和 Markdown renderer 已默认安装，您可以自由移除</span>├── scaffolds<span class="hljs-comment">#模版 文件夹。当您新建文章时，Hexo 会根据 scaffold 来建立文件。</span>├── <span class="hljs-built_in">source</span><span class="hljs-comment">#资源文件夹是存放用户资源的地方。</span>|   ├── _drafts<span class="hljs-comment">#草稿</span>|   └── _posts<span class="hljs-comment">#文章</span>└── themes<span class="hljs-comment">#主题 文件夹。Hexo 会根据主题来生成静态页面。</span></code></pre><pre><code class="hljs asciidoc">hexo generate  #生产静态文件hexo server#开启web服务====其它命令hexo deploy#部署网站hexo clean#清除缓存文件 (db.json) 和已生成的静态文件 (public)hexo list &lt;type&gt;#列出网站资料</code></pre><p>打开hexo的服务，在浏览器输入localhost:4000就可以看到你生成的博客了。</p><h2 id="上传Github并且替换个人域名"><a href="#上传Github并且替换个人域名" class="headerlink" title="上传Github并且替换个人域名"></a>上传Github并且替换个人域名</h2><p>创建一个和你用户名相同的仓库，后面加.github.io，只有这样，将来要部署到GitHub page的时候，才会被识别，也就是xxxx.github.io，其中xxx就是你注册GitHub的用户名</p><h3 id="生成SSH添加Github"><a href="#生成SSH添加Github" class="headerlink" title="生成SSH添加Github"></a>生成SSH添加Github</h3><p>回到git bash</p><pre><code class="hljs routeros">git<span class="hljs-built_in"> config </span>--global user.name <span class="hljs-string">"yourname"</span>git<span class="hljs-built_in"> config </span>--global user.email <span class="hljs-string">"youremail"</span></code></pre><p>这里的yourname输入你的GitHub用户名，youremail输入你GitHub的邮箱。这样GitHub才能知道你是不是对应它的账户。可以用以下两条，检查一下你有没有输对</p><pre><code class="hljs routeros">git<span class="hljs-built_in"> config </span>user.namegit<span class="hljs-built_in"> config </span>user.email</code></pre><p>然后创建SSH一路回车</p><pre><code class="hljs excel">ssh-keygen -<span class="hljs-built_in">t</span> rsa -C <span class="hljs-string">"xxx@xx.com"</span></code></pre><p>ssh，简单来讲，就是一个秘钥，其中，id_rsa是你这台电脑的私人秘钥，不能给别人看的，id_rsa.pub是公共秘钥，可以随便给别人看。把这个公钥放在GitHub上，这样当你链接GitHub自己的账户时，它就会根据公钥匹配你的私钥，当能够相互匹配时，才能够顺利的通过git上传你的文件到GitHub上。</p><p>而后在GitHub的setting中，找到Deploy keys的设置选项，点击Add deploy key 把你的id_rsa.pub里面的信息复制进去。</p><p>在gitbash中，查看是否成功</p><pre><code class="hljs shell">ssh -T git@github.com</code></pre><h3 id="将hexo部署到Github"><a href="#将hexo部署到Github" class="headerlink" title="将hexo部署到Github"></a>将hexo部署到Github</h3><p>将hexo生成的文章部署到GitHub上，打开站点配置文件 <code>_config.yml</code>，翻到最后，修改为你的GitHub账户</p><pre><code class="hljs less"><span class="hljs-attribute">deploy</span>:  <span class="hljs-attribute">type</span>: git  <span class="hljs-attribute">repo</span>: <span class="hljs-attribute">https</span>:<span class="hljs-comment">//github.com/xxx/xxx.github.io.git</span>  <span class="hljs-attribute">branch</span>: master</code></pre><p>这个时候需要先安装deploy-git ，也就是部署的命令,这样你才能用命令部署到GitHub。</p><pre><code class="hljs shell">npm install hexo-deployer-git --save</code></pre><p>然后</p><pre><code class="hljs verilog">hexo cleanhexo <span class="hljs-keyword">generate</span>hexo deploy</code></pre><p>过一会儿就可以在<a href="http://xxx.github.io这个网站看到你的博客了！！" target="_blank" rel="noopener">http://xxx.github.io这个网站看到你的博客了！！</a></p><h3 id="设置个人域名"><a href="#设置个人域名" class="headerlink" title="设置个人域名"></a>设置个人域名</h3><p>192.30.252.153 和 192.30.252.154 是GitHub的服务器地址。</p><p>在域名解析记录里面把Github地址填入</p><p>登录GitHub，进入之前创建的仓库，点击settings-Options-Choose a theme 进去随便选一个出来后从 Custom domain，输入你的域名</p><p>然后在你的博客文件source中创建一个名为CNAME文件，不要后缀。写上你的域名</p><p>最后，在gitbash中，输入</p><pre><code class="hljs properties"><span class="hljs-attr">hexo</span> <span class="hljs-string">clean</span><span class="hljs-attr">hexo</span> <span class="hljs-string">g</span><span class="hljs-attr">hexo</span> <span class="hljs-string">d</span></code></pre><h2 id="新的文章"><a href="#新的文章" class="headerlink" title="新的文章"></a>新的文章</h2><pre><code class="hljs gauss">hexo <span class="hljs-keyword">new</span> [layout] &lt;<span class="hljs-built_in">title</span>&gt;</code></pre><p>然后在source/_post中打开markdown文件，就可以开始编辑了。当你写完的时候，再更新</p><pre><code class="hljs properties"><span class="hljs-attr">hexo</span> <span class="hljs-string">clean</span><span class="hljs-attr">hexo</span> <span class="hljs-string">g</span><span class="hljs-attr">hexo</span> <span class="hljs-string">d</span></code></pre><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><section class="footnotes"><div class="footnote-list"><ol><li><span id="fn:1" class="footnote-text"><span><a href="https://blog.csdn.net/sinat_37781304/article/details/82729029" target="_blank" rel="noopener">https://blog.csdn.net/sinat_37781304/article/details/82729029</a><a href="#fnref:1" rev="footnote" class="footnote-backref"> ↩</a></span></span></li><li><span id="fn:2" class="footnote-text"><span><a href="https://hexo.io/zh-cn/docs/" target="_blank" rel="noopener">https://hexo.io/zh-cn/docs/</a><a href="#fnref:2" rev="footnote" class="footnote-backref"> ↩</a></span></span></li></ol></div></section>]]></content>
    
    
    
    <tags>
      
      <tag>教程</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2020/07/24/hello-world/"/>
    <url>/2020/07/24/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><pre><code class="hljs bash">$ hexo new <span class="hljs-string">"My New Post"</span></code></pre><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><pre><code class="hljs bash">$ hexo server</code></pre><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><pre><code class="hljs bash">$ hexo generate</code></pre><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><pre><code class="hljs bash">$ hexo deploy</code></pre><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
